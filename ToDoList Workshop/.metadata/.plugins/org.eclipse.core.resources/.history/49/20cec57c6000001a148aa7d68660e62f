import java.util.Collection;

import org.junit.*;
import org.junit.Test;
import junit.framework.*;


public class ToDoListTest extends TestCase{
	// Define Test Fixtures
	private ToDoList toDoList1, toDoList2, toDoList3;
	private Task task1, task2, task3, task4, task5, task6, task7, task8, task9, task10, task11, task12;
	
	public ToDoListTest() {
		super();
	}
	@Before
	 public void setUp() throws Exception{
		//Initialise Test Fixtures
		toDoList1 = new ToDoList();
		task1 = new Task("Task 1",false);
		task2 = new Task("Task 2",true);
		task3 = new Task("Task 3",true);
		
		toDoList2 = new ToDoList();
		task4 = new Task("Task 4",false);
		task5 = new Task("Task 5",true);
		task6 = new Task("Task 6",true);
		
		toDoList3 = new ToDoList();
		task7 = new Task("Task 7",false);
		task8 = new Task("Task 8",true);
		task9 = new Task("Task 9",true);
		task10 = new Task("Task 10",false);
		task11 = new Task("Task 11",true);
		task12 = new Task("Task 12",true);
	}
	@After
	 public void tearDown() throws Exception{
		// Uninitialise test Fixtures
		toDoList1 = null;
		task1 = null;
		task2 = null;
		task3 = null;
		
		toDoList2 = null;
		task4 = null;
		task5 = null;
		task6 = null;
		
		toDoList3 = null;
		task7 = null;
		task8 = null;
		task9 = null;
		task10 = null;
		task11 = null;
		task12 = null;
	}

	@Test
	public void testAddTask() {
		assertNotNull(toDoList1);
		toDoList1.addTask(task1);
		assertEquals(toDoList1.getAllTasks().size(),1);
		assertEquals(task1, toDoList1.getTask(task1.getDescription()));
	}
	@Test
	public void testgetStatus() {
		assertNotNull(toDoList1);
		toDoList1.addTask(task1);
		assertEquals(false, toDoList1.getStatus(task1.getDescription()));
		toDoList1.completeTask(task1.getDescription());
		assertEquals(true, toDoList1.getStatus(task1.getDescription()));
	}
	@Test
	public void testRemoveTask() {
		assertNotNull(toDoList1);
		toDoList1.addTask(task1);
		toDoList1.addTask(task2);;
		
		toDoList1.removeTask(task1.getDescription());
		assertNull(toDoList1.getTask(task1.getDescription()));	
	}
	@Test
	public void testGetCompletedTasks() {
		task1.setComplete(true);
		task3.setComplete(true);
		toDoList1.addTask(task1);
		toDoList1.addTask(task2);
		
		Collection<Task> tasks = toDoList1.getCompletedTasks();
		assertEquals(2, tasks.size());
	}
	@Test
	public void testGetTaskList(){
		
	}
}
